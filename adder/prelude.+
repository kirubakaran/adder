(defvar prelude-loaded true)
(defun head (l)
  ([] l 0)
  )

(defun tail (l)
  (slice l 1)
  )

(defun cons (h t)
  (+ (mk-list h) t))

(defmacro cond (&rest cases)
  (defun mk (cs)
    (if (not cs)
        None
        (mk-list (quote if)
                 (head (head cs))
                 (cons (quote begin) (tail (head cs)))
                 (mk (tail cs)))
        )
    )
  (mk cases)
  )
