(defvar prelude-loaded true)
(defun head (l)
  ([] l 0)
  )

(defun tail (l)
  (slice l 1)
  )

(defconst stdin (. python sys stdin))
(defconst stdout (. python sys stdout))
(defconst stderr (. python sys stderr))
(defconst type-list (. python list))
(defconst type-tuple (. python tuple))
(defconst type-set (. python set))
(defconst type-dict (. python dict))

(defun cons (h t)
  (+ (mk-list h) t))

(defmacro cond (&rest cases)
  (defun mk (cs)
    (if (not cs)
        None
        (mk-list (quote if)
                 (head (head cs))
                 (cons (quote begin) (tail (head cs)))
                 (mk (tail cs)))
        )
    )
  (mk cases)
  )

(defmacro .. (&rest parts)
  (mk-list (quote lambda)
           (quote (obj))
           (+ (mk-list (quote .)
                       (quote obj)
                       )
              (list parts)
              )
           )
  )
